{"version":3,"sources":["redux/auth/auth-selectors.js","components/Navigation.js","components/UserMenu/default-avatar.png","components/UserMenu/UserMenu.js","components/AuthNav.js","components/AppBar.js","components/PrivateRoute.js","components/PublicRoute.js","App.js","reportWebVitals.js","redux/contacts-reducer.js","redux/auth/auth-reducer.js","redux/store.js","index.js","redux/auth/auth-operations.js","redux/contacts-operations.js","redux/auth/auth-actions.js","components/Container/container.js","components/Container/container.module.css","redux/contacts-actions.js"],"names":["state","auth","isAuthenticated","user","name","styles","link","display","textDecoration","padding","fontWeight","color","activeLink","connect","authSelectors","to","exact","style","activeStyle","container","alignItems","avatar","marginRight","mapDispatchToProps","onLogout","authOperations","logOut","defaultAvatar","src","alt","width","type","onClick","AuthNav","header","justifyContent","borderBottom","Component","component","redirectTo","routeProps","render","props","restricted","HomeView","lazy","RegisterView","LoginView","ContactsView","App","this","onGetCurrentUser","fallback","height","path","getCurrentUser","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","items","createReducer","fetchContactsSuccess","_","payload","addContactSuccess","deleteContactSuccess","filter","id","loading","fetchContactsRequest","fetchContactsError","addContactRequest","addContactError","deleteContactRequest","deleteContactError","changeFilter","setError","error","combineReducers","initialUserState","email","authActions","registerSuccess","loginSuccess","logoutSuccess","getCurrentUserSuccess","token","registerError","loginError","logoutError","getCurrentUserError","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","authPersistConfig","key","storage","writelist","store","configureStore","reducer","persistReducer","authReducer","contacts","contactsReducer","devToops","process","persistor","persistStore","ReactDOM","document","getElementById","axios","defaults","baseURL","headers","common","Authorization","register","credentials","dispatch","a","registerRequest","post","response","data","message","logoutRequest","contactsOperations","resetContacts","logIn","loginRequest","getState","persistedToken","getCurrentUserRequest","get","fetchContacts","addContact","contact","catch","deleteContact","contactId","delete","createAction","Container","children","className","s","module","exports"],"mappings":"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","file":"static/js/main.5043c376.chunk.js","sourcesContent":["const getIsAuthenticated = state => state.auth.isAuthenticated;\n\nconst getUsername = state => state.auth.user.name;\n\nconst getToken = state => state.auth.token;\n\nexport default {\n    getIsAuthenticated,\n    getUsername,\n    getToken\n};","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport authSelectors from 'redux/auth/auth-selectors';\n\nconst styles = {\n  link: {\n    display: 'inline-block',\n    textDecoration: 'none',\n    padding: 12,\n    fontWeight: 700,\n    color: '#2A363B',\n  },\n  activeLink: {\n    color: '#4251f5',\n  },\n};\n\nconst Navigation = ({ isAuthenticated }) => ( \n      <nav>\n        <NavLink to=\"/\" exact style={styles.link} activeStyle={styles.activeLink}>\n          Головна\n    </NavLink>\n    {isAuthenticated && <NavLink\n      to=\"/contacts\"\n      exact\n      style={styles.link}\n      activeStyle={styles.activeLink}\n    >\n      Контакти\n    </NavLink>}\n      </nav>\n);\n\nconst mapStateToProps = state => ({\n  isAuthenticated: authSelectors.getIsAuthenticated(state),\n});\n\nexport default connect(mapStateToProps)(Navigation);\n\n","export default __webpack_public_path__ + \"static/media/default-avatar.e44fc4e2.png\";","import React from 'react';\nimport { connect } from 'react-redux';\nimport authSelectors from 'redux/auth/auth-selectors';\nimport defaultAvatar from './default-avatar.png';\nimport authOperations from 'redux/auth/auth-operations';\n\nconst styles = {\n  container: {\n    display: 'flex',\n    alignItems: 'center',\n  },\n  avatar: {\n    marginRight: 4,\n  },\n  name: {\n    fontWeight: 700,\n    marginRight: 12,\n  },\n};\n\nconst UserMenu = ({ avatar, name, onLogout }) => (\n  <div style={styles.container}>\n    <img src={avatar} alt=\"\" width=\"32\" style={styles.avatar} />\n    <span style={styles.name}>Welcome, {name}</span>\n    <button type=\"button\" onClick={onLogout}>\n      Logout\n    </button>\n  </div>\n);\n\nconst mapStateToProps = state => ({\n  name: authSelectors.getUsername(state),\n  avatar: defaultAvatar,\n});\n\nconst mapDispatchToProps = {\n  onLogout: authOperations.logOut,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UserMenu);","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nconst styles = {\n  link: {\n    display: 'inline-block',\n    textDecoration: 'none',\n    padding: 12,\n    fontWeight: 700,\n    color: '#2A363B',\n  },\n  activeLink: {\n    color: '#4251f5',\n  },\n};\n\nconst AuthNav = () => (\n  <div>\n     <NavLink\n      to=\"/register\"\n      exact\n      style={styles.link}\n      activeStyle={styles.activeLink}\n    >\n      Реєстрація\n    </NavLink>\n    <NavLink\n      to=\"/login\"\n      exact\n      style={styles.link}\n      activeStyle={styles.activeLink}\n    >\n      Логін\n    </NavLink> \n  </div>\n);\n\nexport default AuthNav;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport Navigation from 'components/Navigation';\nimport UserMenu from 'components/UserMenu/UserMenu';\nimport AuthNav from 'components/AuthNav';\nimport authSelectors from 'redux/auth/auth-selectors';\n\nconst styles = {\n  header: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    borderBottom: '1px solid #2A363B',\n  },\n};\n\nconst AppBar = ({ isAuthenticated }) => (\n  <header style={styles.header}>\n    <Navigation />\n    {isAuthenticated ? <UserMenu /> : <AuthNav />}\n  </header>\n);\n\nconst mapStateToProps = state => ({\n  isAuthenticated: authSelectors.getIsAuthenticated(state),\n});\n\nexport default connect(mapStateToProps)(AppBar);","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport authSelectors from 'redux/auth/auth-selectors';\n\n/**\n * - Если маршрут приватный и пользователь залогинен, рендерит компонент\n * - В противном случае рендерит Redirect на /login\n */\nconst PrivateRoute = ({\n  component: Component,\n  isAuthenticated,\n  redirectTo,\n  ...routeProps\n}) => (\n  <Route\n    {...routeProps}\n    render={props =>\n      isAuthenticated ? <Component {...props} /> : <Redirect to={redirectTo} />\n    }\n  />\n);\n\nconst mapStateToProps = state => ({\n  isAuthenticated: authSelectors.getIsAuthenticated(state),\n});\n\nexport default connect(mapStateToProps)(PrivateRoute);","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport authSelectors from 'redux/auth/auth-selectors';\n\n/**\n * - Если маршрут ограниченный, и пользователь залогинен, рендерит редирект на /todos\n * - В противном случае рендерит компонент\n */\nconst PublicRoute = ({\n  component: Component,\n  isAuthenticated,\n  redirectTo,\n  ...routeProps\n}) => (\n  <Route\n    {...routeProps}\n    render={props =>\n      isAuthenticated && routeProps.restricted ? (\n        <Redirect to={redirectTo} />\n      ) : (\n        <Component {...props} />\n      )\n    }\n  />\n);\n\nconst mapStateToProps = state => ({\n  isAuthenticated: authSelectors.getIsAuthenticated(state),\n});\n\nexport default connect(mapStateToProps)(PublicRoute);","import React, { Component, Suspense, lazy } from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport AppBar from 'components/AppBar';\nimport Container from 'components/Container/container';\nimport authOperations from 'redux/auth/auth-operations';\nimport { connect } from 'react-redux';\nimport PrivateRoute from 'components/PrivateRoute';\nimport PublicRoute from 'components/PublicRoute';\nimport Loader from \"react-loader-spinner\";\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\n\nconst HomeView = lazy(() => import('views/HomeView'));\nconst RegisterView = lazy(() => import('views/RegisterView'));\nconst LoginView = lazy(() => import('views/LoginView'));\nconst ContactsView = lazy(() => import('views/ContactsView'));\n\n\nclass App extends Component {\n  componentDidMount() {\n    this.props.onGetCurrentUser();\n  }\n\n  render() {\n    return (\n      <Container>\n        <AppBar />\n        <Suspense fallback={\n          <Loader\n                type=\"Circles\"\n                color=\"#00BFFF\"\n                height={100}\n                width={100}\n          />\n        }>\n        <Switch>\n          <Route exact path=\"/\" component={HomeView} />\n          <PublicRoute\n            path=\"/register\"\n            restricted\n            redirectTo=\"/contacts\"\n            component={RegisterView} />\n          <PublicRoute\n            path=\"/login\"\n            restricted\n            component={LoginView}\n            redirectTo=\"/contacts\" />\n          <PrivateRoute\n            path=\"/contacts\"\n            redirectTo=\"/login\"\n            component={ContactsView} />\n          </Switch>\n          </Suspense>\n      </Container>\n    );\n  }\n}\n\nconst mapDispatchToProps = {\n  onGetCurrentUser: authOperations.getCurrentUser\n}\n\n\n\nexport default connect (null,mapDispatchToProps)(App);","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createStore, combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport {\n    addContactRequest,\n    addContactSuccess,\n    addContactError,\n    deleteContactRequest,\n    deleteContactSuccess,\n    deleteContactError,\n    fetchContactsRequest,\n    fetchContactsSuccess,\n    fetchContactsError,\n    changeFilter\n} from 'redux/contacts-actions'\n\nconst initialContacts = [];\n\nconst items = createReducer(initialContacts, {\n    [fetchContactsSuccess]: (_, {payload}) => payload,\n    [addContactSuccess]: (state, { payload }) => [...state, ...payload],\n    [deleteContactSuccess]: (state, { payload }) =>\n        state.filter(({id})=> id !== payload)\n})\n\nconst loading = createReducer(false, {\n    [fetchContactsRequest]: () => true,\n    [fetchContactsSuccess]: () => false,\n    [fetchContactsError]:() => false,\n    [addContactRequest]: () => true,\n    [addContactSuccess]: () => false,\n    [addContactError]: () => false,\n    [deleteContactRequest]: () => true,\n    [deleteContactSuccess]: () => false,\n    [deleteContactError]: () => false\n});\n\nconst filter = createReducer('', {\n    [changeFilter]: (_, { payload }) => payload,\n});\n\nconst setError = (_, { payload }) => payload;\n\nconst error = createReducer(null, {\n    [addContactError]: setError,\n    [deleteContactError]: setError,\n    [fetchContactsError]: setError,\n});\n\nexport default combineReducers({\n    items,\n    filter,\n    loading,\n    error\n})\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport authActions from 'redux/auth/auth-actions';\n\nconst initialUserState = { name: null, email: null };\n\nconst user = createReducer(initialUserState, {\n    [authActions.registerSuccess]: (_, { payload }) => payload.user,\n    [authActions.loginSuccess]: (_, { payload }) => payload.user,\n    [authActions.logoutSuccess]: () => initialUserState,\n    [authActions.getCurrentUserSuccess]: (_, {payload}) => payload,\n});\n\nconst token = createReducer(null, {\n    [authActions.registerSuccess]: (_, { payload }) => payload.token,\n    [authActions.loginSuccess]: (_, { payload }) => payload.token,\n    [authActions.logoutSuccess]: () => null,\n});\n\nconst setError = (_, { payload }) => payload;\n\nconst error = createReducer(null, {\n    [authActions.registerError]: setError,\n    [authActions.loginError]: setError,\n    [authActions.logoutError]: setError,\n    [authActions.getCurrentUserError]: setError,\n});\n\nconst isAuthenticated = createReducer(false, {\n    [authActions.registerSuccess]: () => true,\n    [authActions.loginSuccess]: () => true,\n    [authActions.getCurrentUserSuccess]: () => true,\n    [authActions.registerError]: () => false,\n    [authActions.loginError]: () => false,\n    [authActions.getCurrentUserError]: () => false,\n    [authActions.logoutSuccess]: () => false,\n\n\n\n\n\n})\n\nexport default combineReducers({\n    user,\n    isAuthenticated,\n    token,\n    error\n})","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport logger from 'redux-logger';\nimport contactsReducer from 'redux/contacts-reducer';\nimport authReducer from 'redux/auth/auth-reducer';\nimport {\n    persistStore,\n    persistReducer,\n    FLUSH,\n    REHYDRATE,\n    PAUSE,\n    PERSIST,\n    PURGE,\n    REGISTER,\n} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\n\n\nconst middleware = [...getDefaultMiddleware({\n    serializableCheck: {\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    }\n}),\n    logger,\n];\n\nconst authPersistConfig = {\n    key: 'auth',\n    storage,\n    writelist: ['token']\n\n}\n\nconst store = configureStore({\n    reducer: {\n        auth: persistReducer(authPersistConfig, authReducer),\n        contacts: contactsReducer,\n    },\n    middleware,\n    devToops: process.env.NODE_ENV==='development',\n});\n\nconst persistor = persistStore(store);\n\nexport default { store, persistor };","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport store from 'redux/store';\nimport { BrowserRouter } from 'react-router-dom';\nimport { PersistGate } from 'redux-persist/integration/react';\n\nReactDOM.render(\n  // <React.StrictMode>\n    <Provider store={store.store}>\n       <PersistGate loading={null} persistor={store.persistor}>\n     <BrowserRouter>\n    \n      <App />\n      \n        </BrowserRouter>\n        </PersistGate>\n      </Provider>,\n  // </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import axios from 'axios';\nimport authActions from 'redux/auth/auth-actions';\nimport contactsOperations from 'redux/contacts-operations';\n\naxios.defaults.baseURL = 'https://goit-phonebook-api.herokuapp.com/';\n\nconst token = {\n    set(token) {\n        axios.defaults.headers.common.Authorization = `Bearer ${token}`;\n    },\n    unset() {\n        axios.defaults.headers.common.Authorization = '';\n    },\n};\n\nconst register = credentials => async dispatch => {\n    dispatch(authActions.registerRequest());\n    try {\n        const response = await axios.post('/users/signup', credentials);\n         dispatch(authActions.registerSuccess(response.data));\n    }\n    catch (error) {\n        dispatch(authActions.registerError(error.message));\n    }\n   \n };\n\nconst logIn = credentials => async dispatch => {\n    dispatch(authActions.loginRequest());\n    try {\n        const response = await axios.post('/users/login', credentials);\n\n        token.set(response.data.token);\n        dispatch(authActions.loginSuccess(response.data));\n        \n    } catch (error) {\n        dispatch(authActions.loginError(error.message));\n    }\n};\n\nconst logOut = () => async dispatch => {\n    dispatch(authActions.logoutRequest());\n    try {\n        await axios.post('/users/logout');\n        token.unset();\n        dispatch(authActions.logoutSuccess());\n        dispatch(contactsOperations.resetContacts());\n        \n    } catch (error) {\n        dispatch(authActions.logoutError(error.message));\n    }\n };\n\nconst getCurrentUser = () => async (dispatch, getState) => {\n    const {\n        auth: { token: persistedToken },\n    } = getState();\n    if (!persistedToken) {\n        return;\n    }\n    token.set(persistedToken);\n\n    dispatch(authActions.getCurrentUserRequest());\n\n    try {\n        const response = await axios.get('/users/current');\n        dispatch(authActions.getCurrentUserSuccess(response.data));\n\n    } catch (error) {\n        dispatch(authActions.getCurrentUserError(error.message));\n    }\n };\n\nexport default { register, logOut, logIn, getCurrentUser };","import axios from 'axios';\nimport {\n    addContactRequest,\n    addContactSuccess,\n    addContactError,\n    deleteContactRequest,\n    deleteContactSuccess,\n    deleteContactError,\n    fetchContactsRequest,\n    fetchContactsSuccess,\n    fetchContactsError,\n} from 'redux/contacts-actions'\n\nconst fetchContacts = () => async dispatch => {\n    dispatch(fetchContactsRequest());\n\n    try {\n        const { data } = await axios.get('/contacts');\n        dispatch(fetchContactsSuccess(data));\n    } catch (error) {\n        dispatch(fetchContactsError(error.message));\n    }\n}\n\nconst addContact = contact => dispatch => {\n    // console.log('okey', { name, number});\n    // const contact = {\n    //     name,\n    //     number,\n    // };\n\n    dispatch(addContactRequest());\n\n    axios\n        .post('/contacts', contact)\n        .then(({ data }) =>\n        dispatch(addContactSuccess([data]))) \n        .catch(error => dispatch(addContactError(error.message)));\n};\n\nconst deleteContact = contactId => dispatch => {\n    dispatch(deleteContactRequest());\n\n    axios\n        .delete(`/contacts/${contactId}`)\n        .then(() => dispatch(deleteContactSuccess(contactId)))\n        .catch(error => dispatch(deleteContactError(error.message)));\n}\n\nconst resetContacts = () => dispatch => {\n   dispatch(fetchContactsSuccess([]))\n}\n\nexport default {\n    fetchContacts,\n    addContact,\n    deleteContact,\n    resetContacts\n}","import { createAction } from '@reduxjs/toolkit';\n\nconst registerRequest = createAction('auth/registerRequest');\nconst registerSuccess = createAction('auth/registerSuccess');\nconst registerError = createAction('auth/registerError');\n\nconst loginRequest = createAction('auth/loginRequest');\nconst loginSuccess = createAction('auth/loginSuccess');\nconst loginError = createAction('auth/loginError');\n\nconst logoutRequest = createAction('auth/logoutRequest');\nconst logoutSuccess = createAction('auth/logoutSuccess');\nconst logoutError = createAction('auth/logoutError');\n\nconst getCurrentUserRequest = createAction('auth/getCurrentUserRequest');\nconst getCurrentUserSuccess = createAction('auth/getCurrentUserSuccess');\nconst getCurrentUserError = createAction('auth/getCurrentUserError');\n\nexport default {\n  registerRequest,\n  registerSuccess,\n  registerError,\n  logoutRequest,\n  logoutSuccess,\n  logoutError,\n  loginRequest,\n  loginSuccess,\n  loginError,\n  getCurrentUserRequest,\n  getCurrentUserSuccess,\n  getCurrentUserError\n}","import s from 'components/Container/container.module.css';\n\nfunction Container({ children }) {\n  return <div className={s.container}>{children}</div>;\n}\n\nexport default Container;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"container_container__3TiUU\"};","import { createAction } from '@reduxjs/toolkit';\n\nexport const fetchContactsRequest = createAction('contacts/addContactRequest');\nexport const fetchContactsSuccess = createAction('contacts/addContactSuccess');\nexport const fetchContactsError = createAction('contacts/addContactError');\n\nexport const addContactRequest = createAction('contacts/addContactRequest');\nexport const addContactSuccess = createAction('contacts/addContactSuccess',\n//     (payload) => {\n//     return {\n//         payload\n//     }\n// }\n);\nexport const addContactError = createAction('contacts/addContactError');\n\nexport const deleteContactRequest = createAction('contacts/deleteContactRequest');\nexport const deleteContactSuccess = createAction('contacts/deleteContactSuccess ');\nexport const deleteContactError = createAction('contacts/deleteContactError');\n\n\n\n\nexport const changeFilter = createAction('contacts/changeFilter');\n\n"],"sourceRoot":""}